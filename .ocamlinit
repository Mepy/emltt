module S = Emltt.Syntax
module N = Emltt.Work.Nbe

(* let thunk_force : (uC:U<0>) -> (k:U uC) -> U uC=
   fun uC k -> thunk force k *)
let thunk_force = S.Lam (S.Lam (S.Thunk (S.Force (S.Index 0))))
let thunk_force_typ = S.Pi (S.Type(0), S.Pi(S.Index(0), S.Index(1)))
(* normalize thunk_force to fun uC k -> k *)